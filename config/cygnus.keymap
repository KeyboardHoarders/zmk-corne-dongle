#include "mouse.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define MOUSE 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        backspace_del: backspace_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&backspace_del>;
            key-positions = <19 20>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <13 29>;
        };

        pageup {
            bindings = <&kp PAGE_UP>;
            key-positions = <5 29>;
        };

        pagedown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <6 30>;
        };

        para {
            bindings = <&para>;
            key-positions = <17 18>;
        };

        uparrow {
            bindings = <&kp UP_ARROW>;
            key-positions = <2 36>;
        };

        downarrow {
            bindings = <&kp DOWN>;
            key-positions = <36 14>;
        };

        leftarrow {
            bindings = <&kp LEFT>;
            key-positions = <36 13>;
        };

        rightarrow {
            bindings = <&kp RIGHT>;
            key-positions = <36 15>;
        };

        tog4 {
            bindings = <&tog 4>;
            key-positions = <9 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEF {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp TAB    &kp Q       &kp W        &kp E       &kp R        &kp T    &kp Y        &kp U          &kp I       &kp O        &kp P          &kp MINUS
&kp LSHFT  &hm LGUI A  &hm LSHFT S  &hm LALT D  &hm LCTRL F  &kp G    &kp H        &hm LCTRL J    &hm LALT K  &hm LSHFT L  &hm LGUI SEMI  &kp SQT
&kp LCTRL  &kp Z       &kp X        &kp C       &kp V        &kp B    &kp N        &kp M          &kp COMMA   &kp DOT      &kp FSLH       &caps_word
                       &kp LGUI     &mo SYM     &kp SPACE    &kp RET  &lt NAV TAB  &kp RIGHT_ALT
            >;
        };

        NAV {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &kp N1       &kp N7        &kp N8       &kp N9        &kp N5         &kp N6       &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans  &hm LGUI N0  &hm LSHFT N4  &hm LALT N5  &hm LCTRL N6  &kp PAGE_UP    &kp LEFT     &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans       &kp N1        &kp N2       &kp N3        &kp PAGE_DOWN  &trans       &trans    &trans  &trans     &trans  &trans
                     &kp LGUI      &mo SYM      &kp SPACE     &kp RET        &lt NAV TAB  &trans
            >;
        };

        SYM {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT    &kp HASH  &kp DLLR   &kp PRCNT  &kp CARET    &kp AMPS   &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RPAR  &trans
&trans  &trans    &trans    &trans    &trans     &kp GRAVE  &kp MINUS    &kp EQUAL  &kp LBKT   &kp RBKT              &kp BSLH  &trans
&trans  &trans    &trans    &trans    &trans     &kp TILDE  &kp UNDER    &kp PLUS   &kp LBRC   &kp RBRC              &kp PIPE  &trans
                  &kp LGUI  &mo SYM   &kp SPACE  &kp RET    &lt NAV TAB  &trans
            >;
        };

        ADJ {
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4      &kp F5          &kp F6  &kp F7  &kp F8  &kp F9  &kp F10      &trans
&trans  &kp F11       &kp F12       &trans        &trans      &trans          &trans  &trans  &trans  &trans  &trans       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &bt BT_CLR_ALL  &trans  &trans  &trans  &trans  &bootloader  &trans
                      &trans        &trans        &trans      &trans          &trans  &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  U_MS_U   &trans   &trans   U_WH_U        &trans  &trans  &trans  &trans  &trans   &trans
&trans  U_MS_L  U_MS_D  U_MS_R  &trans U_WH_D             &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &mkp LCLK  &mkp RCLK       &trans  &trans  &trans  &trans  &trans  &trans
                      &trans  &trans  &trans         &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
